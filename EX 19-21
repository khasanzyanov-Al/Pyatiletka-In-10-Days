# shablon na odnu kuchy cumney
def f(s,m):
    if s>=25: return m %2==0 #S это условия выигрыша(сколько камней надо для победы)
    if m==0: return 0 #хуй знает что это значит оно энивэй не меняется никогда
    h = [f(s+2,m-1), f(s*2,m-1)] #это какие можно делать ходы, если вариантов больше, то просто через ',' написать еще одно (m-1 хуй знает зачем но надо)
    return any(h) if (m-1)%2==0 else all(h) # хуй хнает как это работает, но это работает
print([s for s in range (1,25) if f(s,2)]) #(19) условия победы: то есть победит тот кто сделает второй ход
print([s for s in range (1,25) if not f(s,1) and f(s,3)]) #(20) условия победы: победит не за 1 первый ход, а за 3   
print([s for s in range (1,25) if not f(s,2) and f(s,4)]) #(21)условия победы: победит не за 2 первый ход, а за 4


# шаблон если в условии есть поражения
def f(s,m):
    if 45 <= s <=112: return m %2 ==0
    if s > 112 return m %2 !=0 #условие поражения
    if m==0: return 0 
    h = [f(s+2,m-1), f(s*2,m-1)] 
    return any(h) if (m-1)%2==0 else all(h)
print([s for s in range (1,45) if f(s,2)]) 
print([s for s in range (1,45) if not f(s,1) and f(s,3)]) 
print([s for s in range (1,45) if not f(s,2) and f(s,4)]) 


# две кучи камней
def f(a, b, m): # a b первая и вторая кучи говна
    if a + b <=2: return m %2 ==0
    if m==0: return 0 
    h = [(a + 1, b, m-1), (a * 3, b, m-1), (a, b + 1, m-1), (a, b * 3, m-1),]  
    return any(h) if (m-1)%2==0 else all(h)
print([s for s in range (1,41) if f(4,s,2)]) # для 19 задания нужно будет заменить all(h) на any(h) так как по условию 1 долбаеб делает неудачный ход
print([s for s in range (1,41) if not f(4,s,1) and f(4,s,3)]) # (4,s,3) означает что в первой куче 4 камня во второй s камней и победа случилась на 3 ходе
print([s for s in range (1,41) if not f(4,s,2) and f(4,s,4)])

# две кучи камней с уменьшением
def f(a, b, m):
    if a + b >=45: return m %2 ==0
    if m==0: return 0 
    h = [(a - 1, b, m-1), ((a-1)//2, b, m-1), (a, b - 1, m-1), (a, (b+1)//2, m-1),] 
    return any(h) if (m-1)%2==0 else all(h)
print([s for s in range (11,1000) if f(10,s,2)])
print([s for s in range (11,1000) if not f(10,s,1) and f(10,s,3)]) 
print([s for s in range (11,1000) if not f(10,s,2) and f(10,s,4)]) 


# одна куча, но нельзя повторить предыдущий ход противника
def f(s, m, p): # p - это предыдущий ход 
    if s >= 140: return m % 2 == 0
    if m == 0: return 0
    h = []
    if p != '+1': h += [f(s + 1, m - 1, '+1')]
    if p != '+2': h += [f(s + 2, m - 1, '+2')]
    if p != '*3': h += [f(s * 3, m - 1, '*3')]
    return any(h) if m % 2 != 0 else all(h)
print([s for s in range(1, 140) if f(s, 2, '')])
print([s for s in range(1, 140) if not f(s, 1, '') and f(s, 3, '')])
print([s for s in range(1, 140) if not f(s, 2, '') and f(s, 4, '')])


# одна куча, но нельзя повторить свой предыдущий ход
def f(s, m, p1, p2):
    if s >= 121: return m % 2 == 0
    if m == 0: return 0
    h = []
    if p2 != '+2': h += [f(s + 2, m - 1, '+2', p1)]
    if p2 != '+5': h += [f(s + 5, m - 1, '+5', p1)]
    if p2 != '+12': h += [f(s + 12, m - 1, '+12', p1)]
    if p2 != '*2': h += [f(s * 2, m - 1, '*2', p1)]
    return any(h) if m % 2 != 0 else all(h)
print('19', [s for s in range(1, 121) if f(s, 2, '', '')])
print('20', [s for s in range(1, 121) if not f(s, 1, '', '') and f(s, 3, '', '')])
print('21', [s for s in range(1, 121) if not f(s, 4, '', '') and f(s, 6, '', '')])


