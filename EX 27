#1 прототип на центроиды
Пункт А)
f = open(r"D:\EGE2025\Файлы 1\27")
points = [list(map(float, s.replace(",", ".").split())) for s in f]
k = 2
clusters = [[], []]
for x, y in points:
    if y > 0:
        clusters[0].append([x, y])
    else:
        clusters[1].append(([x, y]))

best_centroids = [[], []]
for i in range(k):
    min_sum_dist = 10**10
    for x1, y1 in clusters[i]:
        sum_dist = 0
        for x2, y2 in clusters[i]:
            sum_dist += abs(x2 - x1) + abs(y2 - y1)
        if sum_dist < min_sum_dist:
            min_sum_dist = sum_dist
            best_centroids[i] = [x1, y1]
P_x = sum([x for x, y in best_centroids]) / k
P_y = sum([y for x, y in best_centroids]) / k
print(P_x * 10000, P_y * 10000)

Пункт Б)
f = open(r"D:\EGE2025\Файлы 1\27")
points = [list(map(float, s.replace(",", ".").split())) for s in f]
k = 3
clusters = [[], [], []]
for x, y in points:
    if y > 0:
        clusters[0].append([x, y])
    elif x > 0:
        clusters[1].append(([x, y]))
    else:
        clusters[2].append(([x, y]))

best_centroids = [[], [], []]
for i in range(k):
    min_sum_dist = 10**10
    for x1, y1 in clusters[i]:
        sum_dist = 0
        for x2, y2 in clusters[i]:
            sum_dist += abs(x2 - x1) + abs(y2 - y1)
        if sum_dist < min_sum_dist:
            min_sum_dist = sum_dist
            best_centroids[i] = [x1, y1]
P_x = sum([x for x, y in best_centroids]) / k
P_y = sum([y for x, y in best_centroids]) / k
print(abs(P_x * 10000), abs(P_y * 10000))


# если просят АБСОЛЮТ ЦЕЛЫХ ЗНАЧЕНИЙ, то просто подели:
# print(-5.6 // 1)
# print(5.6 // 1)


#2 прототип на антицентроиды
А)
from math import*
f = open(r"D:\EGE2025\Файлы 1\27")
points = [list(map(float, s.replace(",", ".").split())) for s in f]
k = 2
clusters = [[], []]
for x, y in points:
    if x > 0:
        clusters[0].append([x, y])
    else:
        clusters[1].append([x, y])
anticentroids = [[], []]
for i in range(k):
    max_sum_dist = 0
    for x1, y1 in clusters[i]:
        sum_dist = 0
        for x2, y2 in clusters[i]:
            sum_dist += dist([x1, y1], [x2, y2])
        if sum_dist > max_sum_dist:
            max_sum_dist = sum_dist
            anticentroids[i] = [x1, y1]
print(len(anticentroids[0]),len(anticentroids[1]))
print((anticentroids[1][0] * 10000) // 1)
print((anticentroids[0][1] * 10000) // 1)
